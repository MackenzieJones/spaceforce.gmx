<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>shipSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health = 100
rof = 17
knockback = 2
ammoReserve = 120
mag = 30
knocked = false
alarm_set(0, 0)
turn = 2
oldV = 0
oldH = 0
reloading = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Calculation for movement, pretty sloppy, but I don't care because it works
if (keyboard_check(ord("W"))){
    oldV = vspeed
    oldH = hspeed
    vspeed -= turn
}else if (keyboard_check(ord("S"))){
    oldV = vspeed
    oldH = hspeed
    vspeed += turn
}else{
    if (vspeed &gt; 0)
        vspeed -= turn
    else if (vspeed &lt; 0)
        vspeed += turn
    if (vspeed &lt; turn &amp;&amp; vspeed &gt; -turn)
        vspeed = 0
}
if (keyboard_check(ord("A"))){
    oldV = vspeed
    oldH = hspeed
    hspeed -= turn
}else if (keyboard_check(ord("D"))){
    oldV = vspeed
    oldH = hspeed
    hspeed += turn
}else{
    if (hspeed &gt; 0)
        hspeed -= turn
    else if (hspeed &lt; 0)
        hspeed += turn
    if (hspeed &lt; turn &amp;&amp; hspeed &gt; -turn)
        hspeed = 0
}
//Adjustment for diagonal speed
if (speed &gt; global.mainSpeed/10)
    speed = global.mainSpeed/10
if (speed &lt; -global.mainSpeed/10)
    speed = -global.mainSpeed/10

//Point ship in movement direction
image_angle = point_direction(0, 0, oldH, oldV) - 90
    
//Adjustment for knockback
if (knocked){
    hspeed += knockback * -cos(point_direction(x, y, mouse_x, mouse_y)/180 * pi)
    vspeed += knockback * sin(point_direction(x, y, mouse_x, mouse_y)/180 * pi)
    knocked = false
}
if (!reloading &amp;&amp; mag &lt;= 0){
    reloading = true
    alarm[1] = 30
}
//Reloading
if (reloading){
    if (alarm_get(1) == -1){
        reloading = false
        ammoReserve += mag
        if (ammoReserve &gt; 30){
            mag = 30
            ammoReserve -= 30
        }else{
            mag = ammoReserve
            ammoReserve = 0
        }
    }
}

//If the player is alive, center camera around him and don't go out of bounds
if (health &gt; 0 &amp;&amp; satellite.satelliteHealth &gt; 0){
    view_xview = x - view_wview/2
    view_yview = y - view_hview/2
}else{
    instance_create(x, y, gameOverScreen)
    global.playerDead = true
    instance_destroy(self)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm_get(0) == -1 &amp;&amp; mag &gt; 0){
    alarm_set(0, room_speed/rof)
    instance_create(x, y, bullet)
    bulletSound = audio_play_sound(bullet4, 1, false)
    audio_sound_pitch(bulletSound, random_range(0.9, 1.1))
    mag -= 1
    knocked = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>723</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_health</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>50</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>800</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>500</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>850</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(ammoSprite, 0, 60, 500)

draw_set_colour(c_white)
draw_set_font(magFont)
draw_text(100, 500, mag)

draw_set_font(ammoFont)
draw_text(200, 500, ammoReserve)

draw_set_colour(c_black)
draw_set_font(gameFont)
draw_text(58, 818, "Ship Health")
draw_set_colour(c_white)
draw_set_font(gameFont)
draw_text(60, 820, "Ship Health")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloading = true
alarm[1] = 30
//play reloading sound
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>20</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.00100000004749745</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.00100000004749745</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
